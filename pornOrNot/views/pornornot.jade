html
    include header
    body
        <div id="appDiv">
        </div>

        script(type="text/javascript").
            function screenSize(){
                // assumes whatever size the browser  is open when the function is called.
                var h = window.innerHeight;
                var w = window.innerWidth;
                return [h, w];
            }
            function getScreenAspie(){
                var dim = screenSize();
                return dim[0]/dim[1];
            }

            function scaleSize(maxW, maxH, natW, natH){
                  var vRatio = natH / natW;
                  if(natW >= maxW){
                        natW = maxW;
                        natH = natW * vRatio;
                  }
                  if(natH >= maxH){
                        natH = maxH;
                        natW = natH / vRatio;
                  }
                  return [natW, natH];
                }

            function getRequest(url, cb) {
                var req = new XMLHttpRequest();
                req.open('GET', url, true);
                req.onload = cb;
                req.send();
            }
            (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
              (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
              m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
              })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

            ga('create', 'UA-59273785-1', 'auto');
            ga('send', 'pageview');

            window.onload = function() {
                var scrAspectRatio = getScreenAspie();
                var scrDims = screenSize();
                var maxH = 0.5 * scrDims[0];
                var maxW = 0.5 * scrDims[1];
                var url = '/next';
                var response;
                getRequest(url, function(res) {
                    response = this.responseText;
                    var params = response;
                    var divElem =  document.getElementById('appDiv');
                    var html = '<form action ="/pollpost" method="post" id="pollPost">';
                    html += '<a href="https://pornornot.net/apk"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/121cd7cbdc3e4855075ea8b558508b91ac463ac2/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f6c6566745f677265656e5f3030373230302e706e67" alt="Download Android App" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_left_green_007200.png"></a>';
                    html += '<img src=' + params  + ' class="Image" id="Image">';
                    html += '<input type=hidden readonly=true value=' + params + ' name="imgUrl"> <br><input type=radio name="pornCategory" value="frontalTits" >Frontal Boob <br><input type=radio name="pornCategory"value="sideTits">Side Boob <br>    <input type=radio name="pornCategory"value="pussy">Pussy <br>    <input type=radio name="pornCategory"value="dick">Dick <br><input type=radio name="pornCategory"value="ass">Butts <br><input type=radio name="pornCategory" value="None" required>None of the above <br> <input type="submit" value="Classify"></form>';

                    divElem.innerHTML = html;
                    var img = document.getElementById('Image');
                    img.onload = function () {
                        newDims = scaleSize(maxW, maxH, img.naturalWidth, img.naturalHeight);
                        img.width = newDims[0];
                        img.height = newDims[1];
                        }
                form = document.getElementById('pollPost');
                form.onsubmit = function(e) {
                            e.preventDefault();
                            window.location= '/';
                            var args = { 'imgUrl': form.imgUrl,
                                         'pornCategory': form.pornCategory
                                         };
                            ajaxPOST(form, args);

                            };
                });

                var urlEncodeParams = function(obj){
                    var paramString = '';
                    for (var key in data) {
                        var value = obj[key];
                        if(obj[key] instanceof Array || obj[key] instanceof Object){
                            value = encodeURIComponent(JSON.stringify(value));
                        }
                        if (paramString != "") paramString += "&";
                        paramString += key + "=" + encodeURIComponent(value);
                    }
                    return paramString;
                }

                var ajaxPOST = function (form, args) {
                    var httpReq = new XMLHttpRequest();
                    httpReq.open("POST", form.action, true)
                    //Send the proper header information along with the request
                    httpReq.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
                    httpReq.setRequestHeader("Content-length", args.length);
                    httpReq.setRequestHeader("Connection", "close");
                    httpReq.send(urlEncodeParams(args));
                };
            }
